# If not running interactively, don't do anything

[ -z "$PS1" ] && return

# Shell

if [ -n "$ZSH_VERSION" ]; then
   SHELL_ZSH=true
   SHELL_BASH=false
elif [ -n "$BASH_VERSION" ]; then
   SHELL_BASH=true
   SHELL_ZSH=false
fi

# OS

if [ "$(uname -s)" = "Darwin" ]; then
    OS="OSX"
else
    OS=$(uname -s)
fi

# Resolve DOTFILES_DIR (assuming ~/.dotfiles on distros without readlink and/or $BASH_SOURCE/$0)

# READLINK=$(which greadlink || which readlink)
# if $SHELL_BASH; then
#     CURRENT_SCRIPT=$BASH_SOURCE
# else
#     CURRENT_SCRIPT=$0
# fi

#if [[ -n $CURRENT_SCRIPT && -x "$READLINK" ]]; then
#    SCRIPT_PATH=$($READLINK -f "$CURRENT_SCRIPT")
#    DOTFILES_DIR=$(dirname "$(dirname "$SCRIPT_PATH")")
# elif [ -d "$HOME/.dotfiles" ]; then
#     DOTFILES_DIR="$HOME/.dotfiles"
# else
#     echo "Unable to find dotfiles, exiting."
#     return # `exit 1` would quit the shell itself
# fi
DOTFILES_DIR="$HOME/.dotfiles"

# Finally we can source the dotfiles (order matters)

for DOTFILE in "$DOTFILES_DIR"/shell/{function,function*,path,env,alias,completion,grep,prompt,custom}.sh; do
    [ -f "$DOTFILE" ] && . "$DOTFILE"
done

if [ "$OS" = "OSX" ]; then
    for DOTFILE in "$DOTFILES_DIR"/system/{env,alias,function}.osx; do
        [ -f "$DOTFILE" ] && . "$DOTFILE"
    done
fi

if $SHELL_BASH; then
    for DOTFILE in "$DOTFILES_DIR"/bash/*.bash; do
        [ -f "$DOTFILE" ] && . "$DOTFILE"
    done
fi

if $SHELL_ZSH; then
    for DOTFILE in "$DOTFILES_DIR"/zsh/*.zsh; do
        [ -f "$DOTFILE" ] && . "$DOTFILE"
    done
fi

# Some settings from github.com/voku/dotfiles
for option in autocd globstar cmdhist extglob cdable_vars; do
    shopt -s "$option" 2> /dev/null
done
unset option

# option to edit an invalid history operation
shopt -s histreedit;

# append to bash history
shopt -s histappend

# resize windows-size if needed
shopt -s checkwinsize

# check if user not root
if [ "$UID" != 0 ]; then
    # case-insensitive globbing
    shopt -s nocaseglob
    # autocorrect typos in path when cd
    shopt -s cdspell
fi

# no autocomplete blank lines
shopt -s no_empty_cmd_completion;

# source bashrc
if [ -f "$HOME/.bashrc" ]; then
    source "$HOME/.bashrc"
fi

# Clean up

unset READLINK CURRENT_SCRIPT SCRIPT_PATH DOTFILE

# Export

export SHELL_BASH SHELL_ZSH OS DOTFILES_DIR

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
